{"version":3,"file":"sim-d33554bd.chunk.js","sources":["../../../ui/mage/inputs.ts","../../../ui/mage/presets.ts","../../../ui/mage/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport {\n\tMage_Options_ArmorType as ArmorType,\n} from '../core/proto/mage.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const Armor = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecMage, ArmorType>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: ArmorType.NoArmor, tooltip: 'No Armor' },\n\t\t{ actionId: () => ActionId.fromSpellId(22783), value: ArmorType.MageArmor },\n\t\t{ actionId: () => ActionId.fromSpellId(10220), value: ArmorType.IceArmor },\n\t],\n});\n\nexport const MageRotationConfig = {\n\tinputs: [],\n};\n","import { Phase } from '../core/constants/other.js';\nimport {\n\tConsumes,\n\tFlask,\n\tFood,\n\tProfession\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tMage_Options_ArmorType as ArmorType,\n\tMage_Options as MageOptions\n} from '../core/proto/mage.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport DefaultBlankGear from './gear_sets/blank.gear.json';\n\nimport APLDefault from './apls/default.apl.json';\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Gear Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const GearArcanePhase1 = PresetUtils.makePresetGear('Default', DefaultBlankGear, { talentTree: 0 });\nexport const GearFirePhase1 = PresetUtils.makePresetGear('Default', DefaultBlankGear, { talentTree: 1 });\nexport const GearFrostPhase1 = PresetUtils.makePresetGear('Default', DefaultBlankGear, { talentTree: 2 });\n\nexport const GearPresets = {\n  [Phase.Phase1]: [\n    GearArcanePhase1,\n\t\tGearFirePhase1,\n\t\tGearFrostPhase1,\n  ],\n  [Phase.Phase2]: [\n  ]\n};\n\n// TODO: Add Phase 2 preset and pull from map\nexport const DefaultGear = GearPresets[Phase.Phase1][0];\n\n///////////////////////////////////////////////////////////////////////////\n//                                 APL Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const APLArcanePhase1 = PresetUtils.makePresetAPLRotation('Default', APLDefault, { talentTree: 0 });\nexport const APLFirePhase1 = PresetUtils.makePresetAPLRotation('Default', APLDefault, { talentTree: 1 });\nexport const APLFrostPhase1 = PresetUtils.makePresetAPLRotation('Default', APLDefault, { talentTree: 2 });\n\nexport const APLPresets = {\n  [Phase.Phase1]: [\n    APLArcanePhase1,\n\t\tAPLFirePhase1,\n\t\tAPLFrostPhase1,\n  ],\n  [Phase.Phase2]: [\n  ]\n};\n\n// TODO: Add Phase 2 preset and pull from map\nexport const DefaultAPLs: Record<number, Record<number, PresetUtils.PresetRotation>> = {\n  25: {\n\t\t0: APLPresets[Phase.Phase1][0],\n\t\t1: APLPresets[Phase.Phase1][1],\n\t\t2: APLPresets[Phase.Phase1][2],\n\t},\n  40: {\n\t\t0: APLPresets[Phase.Phase1][0],\n\t\t1: APLPresets[Phase.Phase1][1],\n\t\t2: APLPresets[Phase.Phase1][2],\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Talent Presets\n///////////////////////////////////////////////////////////////////////////\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\n\nexport const TalentsArcanePhase1 = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '50005003021',\n\t}),\n};\n\nexport const TalentsFirePhase1 = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '50005003021',\n\t}),\n};\n\nexport const TalentsFrostPhase1 = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '50005003021',\n\t}),\n};\n\nexport const TalentPresets = {\n  [Phase.Phase1]: [\n    TalentsArcanePhase1,\n\t\tTalentsFirePhase1,\n\t\tTalentsFrostPhase1,\n  ],\n  [Phase.Phase2]: [\n  ]\n};\n\n// TODO: Add Phase 2 preset and pull from map\nexport const DefaultTalentsArcane = TalentPresets[Phase.Phase1][0];\nexport const DefaultTalentsFire \t= TalentPresets[Phase.Phase1][1];\nexport const DefaultTalentsFrost \t= TalentPresets[Phase.Phase1][2];\n\nexport const DefaultTalents = DefaultTalentsArcane;\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Options\n///////////////////////////////////////////////////////////////////////////\n\nexport const DefaultOptions = MageOptions.create({\n\tarmor: ArmorType.MageArmor,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import { CURRENT_PHASE, Phase } from '../core/constants/other.js';\nimport {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect\n} from '../core/proto/common.js';\nimport {Stats} from '../core/proto_utils/stats.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport {Player} from '../core/player.js';\nimport {IndividualSimUI, registerSpecConfig} from '../core/individual_sim_ui.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs';\nimport * as ConsumablesInputs from '../core/components/inputs/consumables.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as MageInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecMage, {\n\tcssClass: 'mage-sim-ui',\n\tcssScheme: 'mage',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.48,\n\t\t\t[Stat.StatSpirit]: 0.42,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.38,\n\t\t\t[Stat.StatSpellCrit]: 0.58,\n\t\t\t[Stat.StatSpellHaste]: 0.94,\n\t\t\t[Stat.StatMP5]: 0.09,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.DefaultTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tmanaSpringTotem: TristateEffect.TristateEffectImproved,\n\t\t\tdivineSpirit: true,\n\t\t\tmoonkinAura: true,\n\t\t\tarcaneBrilliance: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\tinnervates: 0,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\twintersChill: true,\n\t\t\timprovedScorch: true,\n\t\t\tjudgementOfWisdom: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tMageInputs.Armor,\n\t],\n\t// Inputs to include in the 'Rotation' section on the settings tab.\n\trotationInputs: MageInputs.MageRotationConfig,\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.BlessingOfWisdom,\n\t\tBuffDebuffInputs.ManaSpringTotem,\n\t\tBuffDebuffInputs.StaminaBuff,\n\t\tBuffDebuffInputs.JudgementOfWisdom,\n\t\t...ConsumablesInputs.FIRE_POWER_CONFIG,\n\t\t...ConsumablesInputs.FROST_POWER_CONFIG,\n\t],\n\texcludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.SpellISBDebuff,\n\t\t...ConsumablesInputs.AGILITY_CONSUMES_CONFIG,\n\t\t...ConsumablesInputs.STRENGTH_CONSUMES_CONFIG,\n\t\t...ConsumablesInputs.SHADOW_POWER_CONFIG,\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\tOtherInputs.TankAssignment,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\t...Presets.APLPresets[Phase.Phase1],\n\t\t\t...Presets.APLPresets[CURRENT_PHASE],\n\t\t],\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\t...Presets.TalentPresets[Phase.Phase1],\n\t\t\t...Presets.TalentPresets[CURRENT_PHASE],\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\t...Presets.GearPresets[Phase.Phase1],\n\t\t\t...Presets.GearPresets[CURRENT_PHASE],\n\t\t],\n\t},\n\n\tautoRotation: (player) => {\n\t\treturn Presets.DefaultAPLs[player.getLevel()][player.getTalentTree()].rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecMage,\n\t\t\ttooltip: 'Arcane Mage',\n\t\t\tdefaultName: 'Arcane',\n\t\t\ticonUrl: getSpecIcon(Class.ClassMage, 0),\n\n\t\t\ttalents: Presets.DefaultTalentsArcane.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecMage,\n\t\t\ttooltip: 'Fire Mage',\n\t\t\tdefaultName: 'Fire',\n\t\t\ticonUrl: getSpecIcon(Class.ClassMage, 1),\n\n\t\t\ttalents: Presets.DefaultTalentsFire.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][1].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][1].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecMage,\n\t\t\ttooltip: 'Frost Mage',\n\t\t\tdefaultName: 'Frost',\n\t\t\ticonUrl: getSpecIcon(Class.ClassMage, 2),\n\n\t\t\ttalents: Presets.DefaultTalentsFrost.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][2].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][2].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class MageSimUI extends IndividualSimUI<Spec.SpecMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecMage>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["Armor","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","ArmorType","NoArmor","tooltip","actionId","ActionId","fromSpellId","MageArmor","IceArmor","GearArcanePhase1","PresetUtils.makePresetGear","DefaultBlankGear","talentTree","GearFirePhase1","GearFrostPhase1","GearPresets","Phase","Phase1","Phase2","DefaultGear","APLArcanePhase1","PresetUtils.makePresetAPLRotation","APLDefault","APLFirePhase1","APLFrostPhase1","APLPresets","DefaultAPLs","TalentsArcanePhase1","name","data","SavedTalents","create","talentsString","TalentsFirePhase1","TalentsFrostPhase1","TalentPresets","DefaultTalentsArcane","DefaultTalentsFire","DefaultTalentsFrost","DefaultTalents","DefaultOptions","MageOptions","armor","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecMage","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.DefaultTalents","specOptions","Presets.DefaultOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","manaSpringTotem","divineSpirit","moonkinAura","arcaneBrilliance","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","innervates","debuffs","Debuffs","wintersChill","improvedScorch","judgementOfWisdom","playerIconInputs","MageInputs.Armor","rotationInputs","inputs","includeBuffDebuffInputs","BuffDebuffInputs.BlessingOfWisdom","BuffDebuffInputs.ManaSpringTotem","BuffDebuffInputs.StaminaBuff","BuffDebuffInputs.JudgementOfWisdom","ConsumablesInputs.FIRE_POWER_CONFIG","ConsumablesInputs.FROST_POWER_CONFIG","excludeBuffDebuffInputs","BuffDebuffInputs.SpellISBDebuff","ConsumablesInputs.AGILITY_CONSUMES_CONFIG","ConsumablesInputs.STRENGTH_CONSUMES_CONFIG","ConsumablesInputs.SHADOW_POWER_CONFIG","otherInputs","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","rotations","Presets.APLPresets","CURRENT_PHASE","Presets.TalentPresets","Presets.GearPresets","autoRotation","player","Presets.DefaultAPLs","getLevel","getTalentTree","rotation","raidSimPresets","spec","defaultName","iconUrl","getSpecIcon","Class","ClassMage","Presets.DefaultTalentsArcane","otherDefaults","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceGnome","Horde","RaceTroll","defaultGear","Presets.DefaultTalentsFire","Presets.DefaultTalentsFrost","MageSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"kXAYa,MAAAA,EAAQC,EAAoE,CACxFC,UAAW,QACXC,OAAQ,CACP,CAAEC,MAAOC,EAAUC,QAASC,QAAS,YACrC,CAAEC,SAAU,IAAMC,EAASC,YAAY,OAAQN,MAAOC,EAAUM,WAChE,CAAEH,SAAU,IAAMC,EAASC,YAAY,OAAQN,MAAOC,EAAUO,qICOrDC,EAAmBC,EAA2B,UAAWC,EAAkB,CAAEC,WAAY,IACzFC,EAAiBH,EAA2B,UAAWC,EAAkB,CAAEC,WAAY,IACvFE,EAAkBJ,EAA2B,UAAWC,EAAkB,CAAEC,WAAY,IAExFG,EAAc,CACzB,CAACC,EAAMC,QAAS,CACdR,EACFI,EACAC,GAEA,CAACE,EAAME,QAAS,IAKLC,EAAcJ,EAAYC,EAAMC,QAAQ,GAMxCG,EAAkBC,EAAkC,UAAWC,EAAY,CAAEV,WAAY,IACzFW,EAAgBF,EAAkC,UAAWC,EAAY,CAAEV,WAAY,IACvFY,EAAiBH,EAAkC,UAAWC,EAAY,CAAEV,WAAY,IAExFa,EAAa,CACxB,CAACT,EAAMC,QAAS,CACdG,EACFG,EACAC,GAEA,CAACR,EAAME,QAAS,IAKLQ,EAA0E,CACrF,GAAI,CACJ,EAAGD,EAAWT,EAAMC,QAAQ,GAC5B,EAAGQ,EAAWT,EAAMC,QAAQ,GAC5B,EAAGQ,EAAWT,EAAMC,QAAQ,IAE5B,GAAI,CACJ,EAAGQ,EAAWT,EAAMC,QAAQ,GAC5B,EAAGQ,EAAWT,EAAMC,QAAQ,GAC5B,EAAGQ,EAAWT,EAAMC,QAAQ,KAWjBU,EAAsB,CAClCC,KAAM,UACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,iBAIJC,EAAoB,CAChCL,KAAM,UACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,iBAIJE,GAAqB,CACjCN,KAAM,UACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,iBAIJG,GAAgB,CAC3B,CAACnB,EAAMC,QAAS,CACdU,EACFM,EACAC,IAEA,CAAClB,EAAME,QAAS,IAKLkB,GAAuBD,GAAcnB,EAAMC,QAAQ,GACnDoB,GAAsBF,GAAcnB,EAAMC,QAAQ,GAClDqB,GAAuBH,GAAcnB,EAAMC,QAAQ,GAEnDsB,GAAiBH,GAMjBI,GAAiBC,EAAYV,OAAO,CAChDW,MAAOzC,EAAUM,YAGLoC,GAAkBC,EAASb,OAAO,CAC9Cc,MAAOC,EAAMC,aACbC,KAAMC,EAAKC,cAGCC,GAAgB,CAC5BC,mBAAoB,GACpBC,YAAaC,EAAWC,YACxBC,YAAaF,EAAWG,WC9GnBC,GAAcC,EAAmBC,EAAKC,SAAU,CACrDC,SAAU,cACVC,UAAW,OAEXC,YAAa,GAIbC,QAAS,CACRC,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAGNC,gBAAiBR,EAAKG,eAEtBM,aAAc,CACbT,EAAKU,WACLV,EAAKW,SACLX,EAAKY,YACLZ,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAENM,SAAU,CAETC,KAAMC,EAAoBD,KAE1BE,UAAWC,EAAMC,QAAQ,CACxB,CAAClB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,cAAe,IACrB,CAACJ,EAAKK,eAAgB,IACtB,CAACL,EAAKM,gBAAiB,IACvB,CAACN,EAAKO,SAAU,MAGjBY,SAAUC,GAEVC,QAASC,GAAuB3D,KAEhC4D,YAAaC,GACbC,MAAOC,GAEPC,UAAWC,EAAU/D,OAAO,CAC3BgE,cAAeC,EAAeC,uBAC9BC,gBAAiBF,EAAeC,uBAChCE,cAAc,EACdC,aAAa,EACbC,kBAAkB,IAEnBC,WAAYC,EAAWxE,OAAO,IAE9ByE,gBAAiBC,EAAgB1E,OAAO,CACvC2E,iBAAiB,EACjBC,iBAAkBX,EAAeC,uBACjCW,WAAY,IAEbC,QAASC,EAAQ/E,OAAO,CACvBgF,cAAc,EACdC,gBAAgB,EAChBC,mBAAmB,KAKrBC,iBAAkB,CACjBC,GAGDC,eFlFiC,CACjCC,OAAQ,IEmFRC,wBAAyB,CACxBC,EACAC,EACAC,EACAC,KACGC,KACAC,GAEJC,wBAAyB,CACxBC,KACGC,KACAC,KACAC,GAGJC,YAAa,CACZb,OAAQ,CACPc,EACAC,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERC,UAAW,IACPC,EAAmBzH,EAAMC,WACzBwH,EAAmBC,IAGvBnD,QAAS,IACLoD,GAAsB3H,EAAMC,WAC5B0H,GAAsBD,IAG1B1D,KAAM,IACF4D,EAAoB5H,EAAMC,WAC1B2H,EAAoBF,KAIzBG,aAAeC,GACPC,EAAoBD,EAAOE,YAAYF,EAAOG,iBAAiBC,SAASA,SAGhFC,eAAgB,CACf,CACCC,KAAMxF,EAAKC,SACX1D,QAAS,cACTkJ,YAAa,SACbC,QAASC,EAAYC,EAAMC,UAAW,GAEtClE,QAASmE,GAA6B7H,KACtC4D,YAAaC,GACbL,SAAUC,GACVqE,cAAe/D,GACfgE,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,UACzB,CAACL,EAAQM,OAAQJ,EAAKK,WAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGrB,EAAoB5H,EAAMC,QAAQ,GAAG+D,MAEzC,CAAC6E,EAAQM,OAAQ,CAChB,EAAGvB,EAAoB5H,EAAMC,QAAQ,GAAG+D,QAI3C,CACCoE,KAAMxF,EAAKC,SACX1D,QAAS,YACTkJ,YAAa,OACbC,QAASC,EAAYC,EAAMC,UAAW,GAEtClE,QAAS+E,GAA2BzI,KACpC4D,YAAaC,GACbL,SAAUC,GACVqE,cAAe/D,GACfgE,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,UACzB,CAACL,EAAQM,OAAQJ,EAAKK,WAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGrB,EAAoB5H,EAAMC,QAAQ,GAAG+D,MAEzC,CAAC6E,EAAQM,OAAQ,CAChB,EAAGvB,EAAoB5H,EAAMC,QAAQ,GAAG+D,QAI3C,CACCoE,KAAMxF,EAAKC,SACX1D,QAAS,aACTkJ,YAAa,QACbC,QAASC,EAAYC,EAAMC,UAAW,GAEtClE,QAASgF,GAA4B1I,KACrC4D,YAAaC,GACbL,SAAUC,GACVqE,cAAe/D,GACfgE,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,UACzB,CAACL,EAAQM,OAAQJ,EAAKK,WAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGrB,EAAoB5H,EAAMC,QAAQ,GAAG+D,MAEzC,CAAC6E,EAAQM,OAAQ,CAChB,EAAGvB,EAAoB5H,EAAMC,QAAQ,GAAG+D,WAOtC,MAAMwF,WAAkBC,EAC9B,WAAAC,CAAYC,EAAyB7B,GAC9B8B,MAAAD,EAAY7B,EAAQpF,GAC3B"}